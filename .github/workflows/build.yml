name: Build

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn

      - name: Lint with ESLint Report
        run: yarn eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint-report.json

      - name: Run Tests and Generate Coverage
        run: yarn test --coverage --coverageReporters=cobertura --coverageDirectory=coverage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            coverage/
            eslint-report.json

  sonarqube:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: reports
          path: .

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.qualitygate.wait=false
            -Dsonar.projectKey=cmusv-sem_S25-SEM-Incident-Response-Application
            -Dsonar.organization=cmusv-sem
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.eslint.reportPaths=eslint-report.json

      - name: Ignore SonarQube Failure
        run: echo "Ignoring SonarQube Failure" || true