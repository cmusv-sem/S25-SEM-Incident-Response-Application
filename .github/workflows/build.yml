name: Build

on:
  push:
    branches:
      - master

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: B uild & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print Current Directory
        run: pwd

      - name: Debug Root Directory
        run: ls -la /

      - name: Debug Workspace Directory
        run: ls -la ${{ github.workspace }}

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Run Tests and Generate Coverage Report
        run: |
          mkdir -p coverage  # Ensure the directory exists
          npm run test       # Runs the test script defined in package.json (npm jest --coverage --coverageReporters=lcov --coverageDirectory=coverage)
          ls -R coverage/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  # sonarqube:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Coverage Report
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: coverage
  #         path: coverage/

  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Debug Workspace
  #       run: ls -R ${{ github.workspace }}

  #     - name: SonarQube Scan
  #       uses: SonarSource/sonarqube-scan-action@v4
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       with:
  #         args: >
  #           -Dsonar.qualitygate.wait=false
  #           -Dsonar.projectKey=cmusv-sem_S25-SEM-Incident-Response-Application
  #           -Dsonar.organization=cmusv-sem
  #           -Dsonar.projectBaseDir=${{ github.workspace }}
  #           -Dsonar.sources=server,client
  #           -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  deploy:
    needs: build # comment out to bypass previous stages
    name: Deploy Client & Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # Only deploy on master branch
    steps:
      - name: Deploy Server
        run: curl "https://api.render.com/deploy/srv-curdjvjqf0us73fijapg?key=JcOMQ1ytI9c"
      - name: Deploy Client
        run: curl "https://api.render.com/deploy/srv-cuuarthopnds739vidb0?key=g7rBrnrhQIk"
