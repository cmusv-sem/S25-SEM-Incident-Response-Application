name: Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn

      - name: Lint client
        run: yean --cwd client lint
      
      - name: Lint server
        run: yean --cwd server lint

      - name: Run Tests and Generate Coverage Report
        run: yarn test --coverage --coverageReporters=cobertura --coverageDirectory=coverage

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: yarn

      - name: Run Tests and Generate Coverage Report
        run: yarn jest --coverage --coverageReporters=cobertura --coverageDirectory=coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.qualitygate.wait=false
            -Dsonar.projectKey=cmusv-sem_S25-SEM-Incident-Response-Application
            -Dsonar.organization=cmusv-sem
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      - name: Ignore SonarQube Failure
        run: echo "Ignoring SonarQube Failure" || true